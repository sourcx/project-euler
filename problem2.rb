# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
LIMIT = 4000000

def sum_even_fib1(n, m, limit)
  sum = n + m

  total = 0
  while sum < LIMIT
    total += sum if sum.even?
    n = m
    m = sum
    sum = n + m
  end

  total
end

def sum_even_fib2(a, b, limit)
  sum = a + b
  return 0 if sum > limit
  return sum.even? ? sum + sum_even_fib2(b, sum, limit) : sum_even_fib2(b, sum, limit)
end

puts sum_even_fib1(1, 2, LIMIT) + 2
puts sum_even_fib2(1, 2, LIMIT) + 2
